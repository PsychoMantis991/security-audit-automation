{
  "name": "Network Discovery - Simple with Params",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "network-scan",
        "responseMode": "responseNode",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [640, 300],
      "webhookId": "network-scan-webhook",
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Obtener parámetros del webhook o usar valores por defecto\nconst input = items[0].json.body || items[0].json;\n\n// Valores por defecto\nconst config = {\n  target_network: input.target_network || '192.168.1.0/24',\n  scan_intensity: input.scan_intensity || 'medium',\n  stealth_mode: input.stealth_mode || false,\n  execution_id: Date.now().toString()\n};\n\nconsole.log('Configuración del escaneo:', config);\n\nreturn { json: config };"
      },
      "name": "Configure Scan",
      "type": "n8n-nodes-base.code",
      "position": [840, 300],
      "typeVersion": 2
    },
    {
      "parameters": {
        "command": "=python3 /opt/pentest/scripts/network-discovery.py {{ $json.target_network }} -o /opt/pentest/results/discovery_{{ $json.execution_id }}.json -v"
      },
      "name": "Run Discovery",
      "type": "n8n-nodes-base.executeCommand",
      "position": [1040, 300],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "const config = items[0].json;\nconst fs = require('fs');\n\ntry {\n  const resultsPath = `/opt/pentest/results/discovery_${config.execution_id}.json`;\n  \n  if (fs.existsSync(resultsPath)) {\n    const results = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));\n    console.log(`Hosts encontrados: ${results.active_hosts?.length || 0}`);\n    \n    return {\n      json: {\n        success: true,\n        target_network: config.target_network,\n        hosts_found: results.active_hosts?.length || 0,\n        active_hosts: results.active_hosts || [],\n        results_file: resultsPath,\n        message: `Escaneo completado. ${results.active_hosts?.length || 0} hosts encontrados.`\n      }\n    };\n  } else {\n    return {\n      json: {\n        success: false,\n        error: 'No se generaron resultados',\n        target_network: config.target_network\n      }\n    };\n  }\n} catch (error) {\n  return {\n    json: {\n      success: false,\n      error: error.message,\n      target_network: config.target_network\n    }\n  };\n}"
      },
      "name": "Process Results",
      "type": "n8n-nodes-base.code",
      "position": [1240, 300],
      "typeVersion": 2
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}"
      },
      "name": "Return Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [1440, 300],
      "typeVersion": 1
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Configure Scan",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Configure Scan": {
      "main": [
        [
          {
            "node": "Run Discovery",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Run Discovery": {
      "main": [
        [
          {
            "node": "Process Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Results": {
      "main": [
        [
          {
            "node": "Return Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
}
