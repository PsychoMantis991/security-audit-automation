version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    restart: always
    ports:
      - "5678:5678"
    environment:
      - N8N_PORT=5678
      - N8N_PROTOCOL=https  # ← CAMBIADO: Ahora usa HTTPS
      - N8N_HOST=${N8N_HOST:-localhost}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${DB_PASSWORD:-pentestpass}
      - N8N_ENCRYPTION_KEY=${ENCRYPTION_KEY:-pentestencryptionkey}
      - REDIS_HOST=redis
      - WEBHOOK_URL=https://${N8N_HOST:-localhost}:5678/  # ← CAMBIADO: HTTPS
      - N8N_LOG_LEVEL=debug
      - NODE_FUNCTION_ALLOW_EXTERNAL=true
      # Configuración SSL
      - N8N_SSL_KEY=/certs/privkey.pem
      - N8N_SSL_CERT=/certs/fullchain.pem
    volumes:
      - n8n_data:/home/node/.n8n
      - ./scripts:/home/node/scripts
      - ./workflows:/home/node/workflows
      - ./templates:/home/node/templates
      - ./reports:/home/node/reports
      - ./config:/home/node/config
      - ./certs:/certs:ro  # ← AGREGADO: Volumen para certificados SSL
    depends_on:
      - postgres
      - redis
      - kali
      - reporting

  postgres:
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=${DB_PASSWORD:-pentestpass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-pentestredispass}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  kali:
    build:
      context: .
      dockerfile: ./docker/dockerfile.kali
    restart: always
    ports:
      - "8080:8080"  # Puerto para API de pentesting
    volumes:
      - ./scripts:/opt/pentest/scripts
      - ./reports:/opt/pentest/reports
      - ./config:/opt/pentest/config
      - ./temp:/opt/pentest/temp
    cap_add:
      - NET_ADMIN
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    environment:
      - API_PORT=8080
      - API_HOST=0.0.0.0

  reporting:
    build:
      context: .
      dockerfile: ./docker/dockerfile.reporting
    restart: always
    volumes:
      - ./templates:/opt/reporting/templates
      - ./reports:/opt/reporting/reports
      - ./config:/opt/reporting/config

  # ← AGREGADO: Servicio para generar certificados SSL automáticamente
  certbot:
    image: certbot/certbot
    volumes:
      - ./certs:/etc/letsencrypt
      - ./certbot-www:/var/www/certbot
    command: >
      sh -c "if [ ! -f /etc/letsencrypt/live/${N8N_HOST:-localhost}/fullchain.pem ]; then
               echo 'Generando certificado auto-firmado para desarrollo...';
               openssl req -x509 -nodes -days 365 -newkey rsa:2048 
               -keyout /etc/letsencrypt/privkey.pem 
               -out /etc/letsencrypt/fullchain.pem 
               -subj '/C=ES/ST=State/L=City/O=Organization/CN=${N8N_HOST:-localhost}';
             fi"

volumes:
  n8n_data:
  postgres_data:
  redis_data:
